(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{320:function(e,t,a){"use strict";a.r(t);var n=a(1),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}}),e._v(" Getting Started")]),e._v(" "),a("h2",{attrs:{id:"first-tendermint-app"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#first-tendermint-app"}}),e._v(" First Tendermint App")]),e._v(" "),a("p",[e._v("As a general purpose blockchain engine, Tendermint is agnostic to the\napplication you want to run. So, to run a complete blockchain that does\nsomething useful, you must start two programs: one is Tendermint Core,\nthe other is your application, which can be written in any programming\nlanguage. Recall from "),a("router-link",{attrs:{to:"/introduction/what-is-tendermint.html#abci-overview"}},[e._v("the intro to\nABCI")]),e._v(" that Tendermint Core handles all the p2p and consensus stuff, and just forwards transactions to the\napplication when they need to be validated, or when they're ready to be\ncommitted to a block.")],1),e._v(" "),a("p",[e._v("In this guide, we show you some examples of how to run an application\nusing Tendermint.")]),e._v(" "),a("h3",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}}),e._v(" Install")]),e._v(" "),a("p",[e._v("The first apps we will work with are written in Go. To install them, you\nneed to "),a("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("install Go"),a("OutboundLink")],1),e._v(", put\n"),a("code",[e._v("$GOPATH/bin")]),e._v(" in your "),a("code",[e._v("$PATH")]),e._v(" and enable go modules with these instructions:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GOPATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$HOME")]),e._v("/go"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v('" '),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" ~/.bash_profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),e._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$GOPATH")]),e._v("/bin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v('" '),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" ~/.bash_profile\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GO111MODULE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("on "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" ~/.bash_profile\n")])])]),a("p",[e._v("Then run")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("go get github.com/tendermint/tendermint\ncd $GOPATH/src/github.com/tendermint/tendermint\nmake tools\nmake install_abci\n")])])]),a("p",[e._v("Now you should have the "),a("code",[e._v("abci-cli")]),e._v(" installed; you'll see a couple of\ncommands ("),a("code",[e._v("counter")]),e._v(" and "),a("code",[e._v("kvstore")]),e._v(") that are example applications written\nin Go. See below for an application written in JavaScript.")]),e._v(" "),a("p",[e._v("Now, let's run some apps!")]),e._v(" "),a("h2",{attrs:{id:"kvstore-a-first-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kvstore-a-first-example"}}),e._v(" KVStore - A First Example")]),e._v(" "),a("p",[e._v("The kvstore app is a "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Merkle_tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("Merkle\ntree"),a("OutboundLink")],1),e._v(" that just stores all\ntransactions. If the transaction contains an "),a("code",[e._v("=")]),e._v(", e.g. "),a("code",[e._v("key=value")]),e._v(", then\nthe "),a("code",[e._v("value")]),e._v(" is stored under the "),a("code",[e._v("key")]),e._v(" in the Merkle tree. Otherwise, the\nfull transaction bytes are stored as the key and the value.")]),e._v(" "),a("p",[e._v("Let's start a kvstore application.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("abci-cli kvstore\n")])])]),a("p",[e._v("In another terminal, we can start Tendermint. You should already have the\nTendermint binary installed. If not, follow the steps from\n"),a("router-link",{attrs:{to:"/introduction/install.html"}},[e._v("here")]),e._v(". If you have never run Tendermint\nbefore, use:")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("tendermint init\ntendermint node\n")])])]),a("p",[e._v("If you have used Tendermint, you may want to reset the data for a new\nblockchain by running "),a("code",[e._v("tendermint unsafe_reset_all")]),e._v(". Then you can run\n"),a("code",[e._v("tendermint node")]),e._v(" to start Tendermint, and connect to the app. For more\ndetails, see "),a("router-link",{attrs:{to:"/tendermint-core/using-tendermint.html"}},[e._v("the guide on using Tendermint")]),e._v(".")],1),e._v(" "),a("p",[e._v("You should see Tendermint making blocks! We can get the status of our\nTendermint node as follows:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -s localhost:26657/status\n")])])]),a("p",[e._v("The "),a("code",[e._v("-s")]),e._v(" just silences "),a("code",[e._v("curl")]),e._v(". For nicer output, pipe the result into a\ntool like "),a("a",{attrs:{href:"https://stedolan.github.io/jq/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jq"),a("OutboundLink")],1),e._v(" or "),a("code",[e._v("json_pp")]),e._v(".")]),e._v(" "),a("p",[e._v("Now let's send some transactions to the kvstore.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -s 'localhost:26657/broadcast_tx_commit?tx=\"abcd\"'\n")])])]),a("p",[e._v("Note the single quote ("),a("code",[e._v("'")]),e._v(") around the url, which ensures that the\ndouble quotes ("),a("code",[e._v('"')]),e._v(") are not escaped by bash. This command sent a\ntransaction with bytes "),a("code",[e._v("abcd")]),e._v(", so "),a("code",[e._v("abcd")]),e._v(" will be stored as both the key\nand the value in the Merkle tree. The response should look something\nlike:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "check_tx": {},\n    "deliver_tx": {\n      "tags": [\n        {\n          "key": "YXBwLmNyZWF0b3I=",\n          "value": "amFl"\n        },\n        {\n          "key": "YXBwLmtleQ==",\n          "value": "YWJjZA=="\n        }\n      ]\n    },\n    "hash": "9DF66553F98DE3C26E3C3317A3E4CED54F714E39",\n    "height": 14\n  }\n}\n')])])]),a("p",[e._v("We can confirm that our transaction worked and the value got stored by\nquerying the app:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -s 'localhost:26657/abci_query?data=\"abcd\"'\n")])])]),a("p",[e._v("The result should look like:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "response": {\n      "log": "exists",\n      "index": "-1",\n      "key": "YWJjZA==",\n      "value": "YWJjZA=="\n    }\n  }\n}\n')])])]),a("p",[e._v("Note the "),a("code",[e._v("value")]),e._v(" in the result ("),a("code",[e._v("YWJjZA==")]),e._v("); this is the base64-encoding\nof the ASCII of "),a("code",[e._v("abcd")]),e._v(". You can verify this in a python 2 shell by\nrunning "),a("code",[e._v("\"YWJjZA==\".decode('base64')")]),e._v(" or in python 3 shell by running\n"),a("code",[e._v("import codecs; codecs.decode(b\"YWJjZA==\", 'base64').decode('ascii')")]),e._v(".\nStay tuned for a future release that "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1794",target:"_blank",rel:"noopener noreferrer"}},[e._v("makes this output more\nhuman-readable"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Now let's try setting a different key and value:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -s 'localhost:26657/broadcast_tx_commit?tx=\"name=satoshi\"'\n")])])]),a("p",[e._v("Now if we query for "),a("code",[e._v("name")]),e._v(", we should get "),a("code",[e._v("satoshi")]),e._v(", or "),a("code",[e._v("c2F0b3NoaQ==")]),e._v("\nin base64:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -s 'localhost:26657/abci_query?data=\"name\"'\n")])])]),a("p",[e._v("Try some other transactions and queries to make sure everything is\nworking!")]),e._v(" "),a("h2",{attrs:{id:"counter-another-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#counter-another-example"}}),e._v(" Counter - Another Example")]),e._v(" "),a("p",[e._v("Now that we've got the hang of it, let's try another application, the\n"),a("code",[e._v("counter")]),e._v(" app.")]),e._v(" "),a("p",[e._v("The counter app doesn't use a Merkle tree, it just counts how many times\nwe've sent a transaction, or committed the state.")]),e._v(" "),a("p",[e._v("This application has two modes: "),a("code",[e._v("serial=off")]),e._v(" and "),a("code",[e._v("serial=on")]),e._v(".")]),e._v(" "),a("p",[e._v("When "),a("code",[e._v("serial=on")]),e._v(", transactions must be a big-endian encoded incrementing\ninteger, starting at 0.")]),e._v(" "),a("p",[e._v("If "),a("code",[e._v("serial=off")]),e._v(", there are no restrictions on transactions.")]),e._v(" "),a("p",[e._v("In a live blockchain, transactions collect in memory before they are\ncommitted into blocks. To avoid wasting resources on invalid\ntransactions, ABCI provides the "),a("code",[e._v("CheckTx")]),e._v(" message, which application\ndevelopers can use to accept or reject transactions, before they are\nstored in memory or gossipped to other peers.")]),e._v(" "),a("p",[e._v("In this instance of the counter app, with "),a("code",[e._v("serial=on")]),e._v(", "),a("code",[e._v("CheckTx")]),e._v(" only\nallows transactions whose integer is greater than the last committed\none.")]),e._v(" "),a("p",[e._v("Let's kill the previous instance of "),a("code",[e._v("tendermint")]),e._v(" and the "),a("code",[e._v("kvstore")]),e._v("\napplication, and start the counter app. We can enable "),a("code",[e._v("serial=on")]),e._v(" with a\nflag:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("abci-cli counter --serial\n")])])]),a("p",[e._v("In another window, reset then start Tendermint:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("tendermint unsafe_reset_all\ntendermint node\n")])])]),a("p",[e._v("Once again, you can see the blocks streaming by. Let's send some\ntransactions. Since we have set "),a("code",[e._v("serial=on")]),e._v(", the first transaction must\nbe the number "),a("code",[e._v("0")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl localhost:26657/broadcast_tx_commit?tx=0x00\n")])])]),a("p",[e._v("Note the empty (hence successful) response. The next transaction must be\nthe number "),a("code",[e._v("1")]),e._v(". If instead, we try to send a "),a("code",[e._v("5")]),e._v(", we get an error:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> curl localhost:26657/broadcast_tx_commit?tx=0x05\n{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "check_tx": {},\n    "deliver_tx": {\n      "code": 2,\n      "log": "Invalid nonce. Expected 1, got 5"\n    },\n    "hash": "33B93DFF98749B0D6996A70F64071347060DC19C",\n    "height": 34\n  }\n}\n')])])]),a("p",[e._v("But if we send a "),a("code",[e._v("1")]),e._v(", it works again:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('> curl localhost:26657/broadcast_tx_commit?tx=0x01\n{\n  "jsonrpc": "2.0",\n  "id": "",\n  "result": {\n    "check_tx": {},\n    "deliver_tx": {},\n    "hash": "F17854A977F6FA7EEA1BD758E296710B86F72F3D",\n    "height": 60\n  }\n}\n')])])]),a("p",[e._v("For more details on the "),a("code",[e._v("broadcast_tx")]),e._v(" API, see "),a("router-link",{attrs:{to:"/tendermint-core/using-tendermint.html"}},[e._v("the guide on using\nTendermint")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"counterjs-example-in-another-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#counterjs-example-in-another-language"}}),e._v(" CounterJS - Example in Another Language")]),e._v(" "),a("p",[e._v("We also want to run applications in another language - in this case,\nwe'll run a Javascript version of the "),a("code",[e._v("counter")]),e._v(". To run it, you'll need\nto "),a("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("install node"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("You'll also need to fetch the relevant repository, from\n"),a("a",{attrs:{href:"https://github.com/tendermint/js-abci",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(", then install it:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git clone https://github.com/tendermint/js-abci.git\ncd js-abci\nnpm install abci\n")])])]),a("p",[e._v("Kill the previous "),a("code",[e._v("counter")]),e._v(" and "),a("code",[e._v("tendermint")]),e._v(" processes. Now run the app:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("node example/counter.js\n")])])]),a("p",[e._v("In another window, reset and start "),a("code",[e._v("tendermint")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("tendermint unsafe_reset_all\ntendermint node\n")])])]),a("p",[e._v("Once again, you should see blocks streaming by - but now, our\napplication is written in Javascript! Try sending some transactions, and\nlike before - the results should be the same:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# ok\ncurl localhost:26657/broadcast_tx_commit?tx=0x00\n# invalid nonce\ncurl localhost:26657/broadcast_tx_commit?tx=0x05\n# ok\ncurl localhost:26657/broadcast_tx_commit?tx=0x01\n")])])]),a("p",[e._v("Neat, eh?")])])}),[],!1,null,null,null);t.default=s.exports}}]);